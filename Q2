def remove_element(nums, val):
    # Initialize two pointers: one for iterating through the array,
    # and another for keeping track of the index where non-val elements should be placed.
    k = 0

    for i in range(len(nums)):
        # If the current element is not equal to val, move it to the kth position
        if nums[i] != val:
            nums[k] = nums[i]
            k += 1

    # The first k elements now contain the elements not equal to val
    # The remaining elements (from k to the end of the array) are not important
    # You can fill them with any placeholder value (e.g., _*) as described in the prompt

    # Return the count of non-val elements (k) as well as the modified array (nums)
    return k, nums

# Test the function with the example input
nums = [3, 2, 2, 3]
val = 3
k, modified_nums = remove_element(nums, val)
print("Output:", k, ", nums =", modified_nums)
